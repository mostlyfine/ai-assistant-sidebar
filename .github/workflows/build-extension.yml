name: Build Chrome Extension

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Get version from manifest
      id: get_version
      run: echo "version=$(node -p "require('./manifest.json').version")" >> $GITHUB_OUTPUT
      
    - name: Create extension package
      run: |
        # ChromeÊã°ÂºµÊ©üËÉΩ„Å´ÂøÖË¶Å„Å™„Éï„Ç°„Ç§„É´„ÅÆ„Åø„ÇíÂê´„ÇÄ„Éá„Ç£„É¨„ÇØ„Éà„É™„Çí‰ΩúÊàê
        mkdir -p dist/ai-assistant-sidebar
        
        # ÂøÖË¶Å„Å™„Éï„Ç°„Ç§„É´„Çí„Ç≥„Éî„Éº
        cp manifest.json dist/ai-assistant-sidebar/
        cp sidepanel.html dist/ai-assistant-sidebar/
        cp background.js dist/ai-assistant-sidebar/
        cp -r scripts/ dist/ai-assistant-sidebar/
        cp -r styles/ dist/ai-assistant-sidebar/
        cp -r icons/ dist/ai-assistant-sidebar/
        
        # ‰∏çË¶Å„Å™„Éï„Ç°„Ç§„É´„ÇíÈô§Â§ñÔºàÈñãÁô∫Áî®„Éï„Ç°„Ç§„É´Ôºâ
        rm -rf dist/ai-assistant-sidebar/scripts/build.js || true
        
        # ZIP„Éï„Ç°„Ç§„É´„Çí‰ΩúÊàê
        cd dist
        zip -r ai-assistant-sidebar-v${{ steps.get_version.outputs.version }}.zip ai-assistant-sidebar/
        
        # „Éï„Ç°„Ç§„É´„Çµ„Ç§„Ç∫„ÇíÁ¢∫Ë™ç
        ls -lh ai-assistant-sidebar-v${{ steps.get_version.outputs.version }}.zip
        
    - name: Upload extension artifact
      uses: actions/upload-artifact@v4
      with:
        name: ai-assistant-sidebar-v${{ steps.get_version.outputs.version }}
        path: dist/ai-assistant-sidebar-v${{ steps.get_version.outputs.version }}.zip
        retention-days: 90
        
    - name: Create Release
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: dist/ai-assistant-sidebar-v${{ steps.get_version.outputs.version }}.zip
        name: AI Assistant Sidebar v${{ steps.get_version.outputs.version }}
        body: |
          ## AI Assistant Sidebar v${{ steps.get_version.outputs.version }}
          
          ### üöÄ ChromeÊã°ÂºµÊ©üËÉΩ„ÅÆ„Ç§„É≥„Çπ„Éà„Éº„É´ÊñπÊ≥ï
          
          1. `ai-assistant-sidebar-v${{ steps.get_version.outputs.version }}.zip` „Çí„ÉÄ„Ç¶„É≥„É≠„Éº„Éâ
          2. ZIP„Éï„Ç°„Ç§„É´„ÇíËß£Âáç
          3. Chrome„Åß `chrome://extensions/` „ÇíÈñã„Åè
          4. „Äå„Éá„Éô„É≠„ÉÉ„Éë„Éº„É¢„Éº„Éâ„Äç„ÇíÊúâÂäπ„Å´„Åô„Çã
          5. „Äå„Éë„ÉÉ„Ç±„Éº„Ç∏Âåñ„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑÊã°ÂºµÊ©üËÉΩ„ÇíË™≠„ÅøËæº„ÇÄ„Äç„Çí„ÇØ„É™„ÉÉ„ÇØ
          6. Ëß£Âáç„Åó„Åü„Éï„Ç©„É´„ÉÄ„ÇíÈÅ∏Êäû
          
          ### ‚ú® Ê©üËÉΩ
          
          - üî∑ **Vertex AI**: Google Cloud„ÅÆGemini API„Å´ÂØæÂøú
          - üîµ **OpenAI Compatible**: OpenAI„ÄÅAzure OpenAI„ÄÅAnthropic„ÄÅGroq„ÄÅDeepSeek„ÄÅOllamaÂØæÂøú
          - üü¢ **ChatGPT**: OpenAI ChatGPT APIÂØæÂøú
          - üü† **AWS Bedrock**: Claude„ÄÅTitan„ÄÅCommand R„ÄÅLlamaÁ≠â„ÅÆ13„É¢„Éá„É´ÂØæÂøú
          - üîí **„Çª„Ç≠„É•„É™„ÉÜ„Ç£**: APIË™çË®ºÊÉÖÂ†±„ÅÆÊöóÂè∑Âåñ‰øùÂ≠ò
          - üåê **ÂõΩÈöõÂåñ**: Êó•Êú¨Ë™û„ÉªËã±Ë™ûÂØæÂøú
          - üì± **„É¢„ÉÄ„É≥UI**: „É¨„Çπ„Éù„É≥„Ç∑„Éñ„Éá„Ç∂„Ç§„É≥„ÄÅ„Çπ„ÇØ„É≠„Éº„É´ÂØæÂøú
          - ‚öôÔ∏è **„Ç´„Çπ„Çø„Éû„Ç§„Ç∫**: „Éï„Ç©„É≥„Éà„Çµ„Ç§„Ç∫Ë™øÊï¥„ÄÅ„Ç´„Çπ„Çø„É†„Ç§„É≥„Çπ„Éà„É©„ÇØ„Ç∑„Éß„É≥
          
          ### üß™ „ÉÜ„Çπ„ÉàÁµêÊûú
          
          - ‚úÖ ÂÖ®131„ÉÜ„Çπ„Éà„Ç±„Éº„Çπ„ÅåÊàêÂäü
          - ‚úÖ „Çª„Ç≠„É•„É™„ÉÜ„Ç£Ê§úË®ºÊ∏à„Åø
          - ‚úÖ ChromeÊã°ÂºµÊ©üËÉΩ„Å®„Åó„Å¶Âãï‰ΩúÁ¢∫Ë™çÊ∏à„Åø
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  security-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Security audit
      run: npm audit --audit-level=moderate
      
    - name: Check for sensitive files
      run: |
        echo "Checking for sensitive files..."
        # API„Ç≠„Éº„ÇÑ„Ç∑„Éº„ÇØ„É¨„ÉÉ„Éà„ÅåÂê´„Åæ„Çå„Å¶„ÅÑ„Å™„ÅÑ„Åã„ÉÅ„Çß„ÉÉ„ÇØ
        if grep -r "sk-" --include="*.js" --include="*.json" --include="*.md" . 2>/dev/null; then
          echo "‚ùå Potential API keys found!"
          exit 1
        fi
        
        if grep -r "AKIA" --include="*.js" --include="*.json" --include="*.md" . 2>/dev/null; then
          echo "‚ùå Potential AWS keys found!"
          exit 1
        fi
        
        echo "‚úÖ No sensitive data detected"
        
    - name: Validate manifest.json
      run: |
        echo "Validating manifest.json..."
        node -e "
          const manifest = require('./manifest.json');
          if (!manifest.manifest_version || manifest.manifest_version !== 3) {
            throw new Error('Invalid manifest version');
          }
          if (!manifest.name || !manifest.version || !manifest.description) {
            throw new Error('Missing required manifest fields');
          }
          if (!manifest.icons || !manifest.action) {
            throw new Error('Missing required Chrome extension components');
          }
          console.log('‚úÖ manifest.json is valid');
        "